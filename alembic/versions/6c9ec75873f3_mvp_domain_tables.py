"""mvp domain tables

Revision ID: 6c9ec75873f3
Revises: d10f190c010d
Create Date: 2025-09-29 14:48:07.502172

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op  # type: ignore[attr-defined]

# revision identifiers, used by Alembic.
revision: str = "6c9ec75873f3"
down_revision: Union[str, None] = "d10f190c010d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "circuits",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ref", sa.String(length=64), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("country_code", sa.String(length=3), nullable=True),
        sa.Column("city", sa.String(length=64), nullable=True),
        sa.Column("latitude", sa.Float(), nullable=True),
        sa.Column("longitude", sa.Float(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("ref", name="uq_circuits_ref"),
    )
    op.create_table(
        "drivers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ref", sa.String(length=64), nullable=False),
        sa.Column("code", sa.String(length=3), nullable=True),
        sa.Column("permanent_number", sa.Integer(), nullable=True),
        sa.Column("first_name", sa.String(length=64), nullable=False),
        sa.Column("last_name", sa.String(length=64), nullable=False),
        sa.Column("date_of_birth", sa.Date(), nullable=False),
        sa.Column("nationality", sa.String(length=64), nullable=True),
        sa.Column("country_code", sa.String(length=3), nullable=True),
        sa.Column("place_of_birth_city", sa.String(length=64), nullable=True),
        sa.Column("place_of_birth_country_code", sa.String(length=3), nullable=True),
        sa.Column("wikipedia_url", sa.String(length=256), nullable=True),
        sa.Column("image_url", sa.String(length=256), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("ref", name="uq_drivers_ref"),
    )
    op.create_table(
        "teams",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ref", sa.String(length=64), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("ref", name="uq_teams_ref"),
    )
    op.create_table(
        "entries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("season_id", sa.Integer(), nullable=False),
        sa.Column("team_id", sa.Integer(), nullable=False),
        sa.Column("driver_id", sa.Integer(), nullable=False),
        sa.Column("car_number", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["driver_id"],
            ["drivers.id"],
        ),
        sa.ForeignKeyConstraint(["season_id"], ["seasons.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("season_id", "driver_id", name="uq_entries_season_driver"),
        sa.UniqueConstraint(
            "season_id", "team_id", "driver_id", name="uq_entries_season_team_driver"
        ),
    )
    op.create_index("ix_entries_season", "entries", ["season_id"], unique=False)
    op.create_table(
        "events",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("season_id", sa.Integer(), nullable=False),
        sa.Column("circuit_id", sa.Integer(), nullable=False),
        sa.Column("round", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["circuit_id"],
            ["circuits.id"],
        ),
        sa.ForeignKeyConstraint(["season_id"], ["seasons.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("season_id", "round", name="uq_events_season_round"),
    )
    op.create_index("ix_events_season", "events", ["season_id"], unique=False)
    op.create_table(
        "sessions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("type", sa.Enum("FP", "QUALIFYING", "RACE", name="session_type"), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("session_order", sa.Integer(), nullable=False),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["event_id"], ["events.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_sessions_event", "sessions", ["event_id"], unique=False)
    op.create_table(
        "session_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.Integer(), nullable=False),
        sa.Column("entry_id", sa.Integer(), nullable=False),
        sa.Column("position", sa.Integer(), nullable=True),
        sa.Column("points", sa.Float(), nullable=False),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("time_ms", sa.Integer(), nullable=True),
        sa.Column("gap_ms", sa.Integer(), nullable=True),
        sa.Column("laps", sa.Integer(), nullable=True),
        sa.Column("grid", sa.Integer(), nullable=True),
        sa.Column("classified", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["entry_id"], ["entries.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["session_id"], ["sessions.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_results_session", "session_results", ["session_id"], unique=False)
    op.create_index(
        "ix_results_session_pos", "session_results", ["session_id", "position"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_results_session_pos", table_name="session_results")
    op.drop_index("ix_results_session", table_name="session_results")
    op.drop_table("session_results")
    op.drop_index("ix_sessions_event", table_name="sessions")
    op.drop_table("sessions")
    op.drop_index("ix_events_season", table_name="events")
    op.drop_table("events")
    op.drop_index("ix_entries_season", table_name="entries")
    op.drop_table("entries")
    op.drop_table("teams")
    op.drop_table("drivers")
    op.drop_table("circuits")
    # ### end Alembic commands ###
